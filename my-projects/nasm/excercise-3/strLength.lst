     1                                  ;calculate length of a string
     2                                  ;sh compile-nasm-exercise.sh 3 strLength e
     3                                  
     4                                  ;  IN:	RSI = string location
     5                                  ; OUT:	RCX = length (not including the NULL terminator)
     6                                  section .data
     7 00000000 303132333435363738-         numb: db "0123456789", 0Ah
     7 00000009 390A               
     8 0000000B 61616100                    test: db "aaa",00h
     9                                      test_l: equ $-test
    10                                      
    11                                  section .bss
    12                                  
    13                                  section .text
    14                                      global _start
    15                                  _start:
    16 00000000 50                          push rax
    17 00000001 53                          push rbx
    18 00000002 51                          push rcx
    19 00000003 52                          push rdx
    20 00000004 56                          push rsi
    21 00000005 57                          push rdi
    22                                  
    23 00000006 41B904000000                mov r9, test_l
    24 0000000C 48BE-                       mov rsi, test
    24 0000000E [0B00000000000000] 
    25 00000016 4889F7                      mov rdi, rsi    ;RDI points current byte
    26                                  
    27 00000019 4831C9                      xor rcx, rcx    ;used by REPNE? rcx=0
    28 0000001C 4831C0                      xor rax, rax    ;compare RDI with AL
    29                                      
    30                                  _rcx:
    31 0000001F 48F7D1                      not rcx         ; RCX=-1
    32                                  _cld:
    33 00000022 FC                          cld             ;DF=0 index++, lowest-to-highest address, auto-incrementing
    34                                  
    35                                                      ;repne termination (R)(E)CX=0 or ZF=1 (ZF is set by scasb ZF=1 found, ZF=0 not found)
    36                                  _repne_do:
    37 00000023 F2AE                        repne scasb     ;RDI=current byte, if DF=0 then (R|E)DI++, RCX++, compare AL<->RDI
    38 00000025 4C8B17                      mov r10, [RDI]
    39                                  _repne_done:
    40 00000028 48F7D1                      not rcx
    41 0000002B 48FFC9                  	dec rcx
    42                                  
    43                                      ; print how many bytes was found
    44 0000002E B801000000                  mov rax,1       ;sys_write
    45 00000033 BF01000000                  mov rdi,1       ;fd
    46 00000038 48BE-                       mov rsi,numb    ;buf
    46 0000003A [0000000000000000] 
    47 00000042 4889CA                      mov rdx,rcx     ;count
    48 00000045 0F05                        syscall
    49                                  
    50 00000047 B83C000000                  mov rax,60
    51 0000004C BF00000000                  mov rdi,0
    52 00000051 0F05                        syscall
